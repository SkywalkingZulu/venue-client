version: 2
jobs:
  # The build job
  build_webapp:
    working_directory: ~/venue
    docker:
      - image: circleci/node:10.13
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          name: Restore node module dependencies
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v3-npm-cache-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
            - v3-npm-cache-{{ .Branch }}-
            - v3-npm-cache-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: cd webapp && npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          paths:
            - ~/venue/webapp/node_modules # location depends on npm version
          key: v3-npm-cache-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
      # Lint the source code
      - run:
          name: Linting
          command: cd webapp && npm run lint
      # Test the source code
      # TODO Get tests to do anything useful
      # - run:
      #     name: Testing
      #     command: cd webapp && npm run test
      # Build project with different configuration based on
      # the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "qa" ]; then
                cd webapp && cp env/qa.env ./.env && npm run build-qa
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd webapp && cp env/production.env ./.env && npm run build-production
            else
                cd webapp && cp env/dev.env ./.env && npm run build
            fi
      # Cache the .nuxt/dist folder for the deploy job
      - save_cache:
          key: v3-dist-{{ .Branch }}-{{ .Revision }}
          paths:
            - webapp/.env
            - webapp/lang
            - webapp/package.json
            - webapp/package-lock.json
            - webapp/serverless.yml
            - webapp/nuxt.config.js
            - webapp/handler.js
            - webapp/tsconfig.json
            - webapp/tslint.json
            - webapp/.nuxt/dist
            - webapp/static

  deploy_auth:
    working_directory: ~/venue-auth
    docker:
      - image: circleci/node:10.13
    steps:
      # TODO checkout just the code for this service
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          name: Restore node module dependencies
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v3-npm-cache-auth-{{ .Branch }}-{{ checksum "services/auth/package-lock.json" }}
            - v3-npm-cache-auth-{{ .Branch }}-
            - v3-npm-cache-auth-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: cd services/auth && npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          paths:
            - ~/venue-auth/services/auth/node_modules # location depends on npm version
          key: v3-npm-cache-auth-{{ .Branch }}-{{ checksum "services/auth/package-lock.json" }}
      # Deploy with the script corresponding to the current branch
      - run:
          name: Deploy to Lambda with Serverless
          command: |
            if [ "${CIRCLE_BRANCH}" == "qa" ]; then
                cd services/auth && npm run sls:deploy-qa
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd services/auth && npm run sls:deploy-production
            else
                cd services/auth && npm run sls:deploy
            fi

  # The deploy job
  deploy_webapp:
    working_directory: ~/venue
    docker:
      - image: circleci/node:10.13
    steps:
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          name: Restore built project
          key: v3-dist-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          name: Restore node module dependencies
          key: v3-npm-cache-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
      # Deploy with the script corresponding to the current branch
      - run:
          name: Deploy to Lambda with Serverless
          command: |
            if [ "${CIRCLE_BRANCH}" == "qa" ]; then
                cd webapp && npm run sls:deploy-qa
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                cd webapp && npm run sls:deploy-production
            else
                cd webapp && npm run sls:deploy
            fi
workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build_webapp
      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy_auth:
          filters:
            branches:
              only:
                - develop
                - qa
                - master
      - deploy_webapp:
          requires:
            - build_webapp
          filters:
            branches:
              only:
                - develop
                - qa
                - master
